#define _CRT_SECURE_NO_WARNINGS

#include<iostream>
#include<cstdio>
#include<string.h>
#include<map>
#include<string>
#include<stack>
#include<queue>
#include<algorithm>
using namespace std;

const int MAX = 10000005;
int matrix[1001][1001];
vector<int> minTree;

int main () {
	int N;
	scanf("%d",  &N);
	int d[1001];
	int flag[1001] = {0};

	for (int i = 0; i < N; i++)
	{
		for (int j = 0; j < N; j++)
		{
			scanf("%d", &matrix[i][j]);
		}
	}
	
	vector<int> edge;
	minTree.push_back(0);
	d[0] = 0;
	edge.push_back(d[0]);
	flag[0] = 1;
	for (int i = 0; i < N; i++)
	{
		d[i] = matrix[0][i];
	}
	
	while (minTree.size() != N) 
	{
		int minEdge = MAX;
		int index = 0;
		for (int i = 0; i < N; i++)
		{
			if (!flag[i] && minEdge > d[i])
			{
				minEdge = d[i];
				index = i;
			}
		}
		minTree.push_back(index);
		flag[index] = 1;
		edge.push_back(minEdge);
		for (int i = 0; i < N; i++)
		{
			d[i] = min(d[i], matrix[index][i]);
		}
	}

	int sum = 0;
	for (int i = 0; i < N; i++)
	{
		sum += edge[i];
	}

	printf("%d\n", sum);
}                                                               
